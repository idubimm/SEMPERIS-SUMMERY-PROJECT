properties([  parameters([ choice(defaultValue: 1, name: 'REPLICAS',
                                    choices: [1, 2, 3, 4, 5, 6,7,8],
                                    description: 'Select a replica count from 1 to 8 for the web pod'
                                ),
                             booleanParam(
                                    name: 'IS_SHUTDOWN',
                                    defaultValue: false,
                                    description: 'a checkbox to shut down app instead of starting it'
                                )
                        
                        ])

])
pipeline {
    agent any // Or specify a particular agent configuration
    stages {
        stage('creating tunnel to support load balancer') {
            steps {
                script {
                    sh '''#!/bin/bash
                    chmod -R +x ./jenkins-flow-scripts/bash
                    source jenkins-flow-scripts/bash/kubernetes-utils.sh
                    start_minikube_if_down
                    '''
                }
            }
        }
        stage('deploy namespace') {
            steps {
                script {
                    sh 'kubectl apply -f ./kubernetes/yaml-files/00-namespace-flask-python.yaml'
                }
            }
        }
  
    stage('deploy postgres and its service') {
        steps {
            script {
                    '''#!/bin/bash
                    source jenkins-flow-scripts/bash/kubernetes-utils.sh
                    echo 'STATEEFUL SET MUST BE DELETED AND CANNOT BE UPFATED - delete before apply'
                                            #ELEMENTTYPE  #ELEMENT NAME   # NAMESPACE         #FILE FOR DELETE POD
                    delete_active_element 'pods'         'postgres'        'semperis-ns'  './kubernetes/yaml-files/01-postgres.yaml' 
                    kubectl apply -f ./kubernetes/yaml-files/01-postgres.yaml
                    '''
                }
            }
        }
    stage('deploy flask app with pre selected scale amount') {
        steps {
            script {
                    sh'''
                    cp ./kubernetes/yaml-files/02-flask.yaml .
                    sed -i "s/REPLICAS/${REPLICAS}/g" 02-flask.yaml
                    kubectl apply -f 02-flask.yaml
                    '''
                }
            }
        }
        stage('deploy LB service') {
            steps {
                script {
                    sh 'kubectl apply -f ./kubernetes/yaml-files/03-services.yaml'
                }
            }
        }

        stage('test sanity for K8 execution') 
        {
            steps {
                script {
                        sh '''#!/bin/bash
                            source jenkins-flow-scripts/bash/kubernetes-utils.sh
                            endpoint=$(get_application_ip_and_port "web-app" "semperis-ns") 
                            source jenkins-flow-scripts/bash/test-flask-app.sh
                                                    [1.flask app endpoint]   [2.#retries]  [3.interval secconds]
                            validate_flask_in_loop     "$endpoint"              5               1             
                        '''
                }
            }
        }

        stage('delete deployment') {
            steps {
                script {
                     if (params.IS_SHUTDOWN) {
                    sh 'kubectl delete -f ./kubernetes/yaml-files/03-services.yaml'
                    sh 'kubectl delete -f ./kubernetes/yaml-files/02-flask.yaml'
                    sh 'kubectl delete -f ./kubernetes/yaml-files/01-postgres.yaml'
                    sh 'kubectl delete -f ./kubernetes/yaml-files/00-namespace-flask-python.yaml'
                     } else {
                        echo 'Skipping seleting pods due to parameter'
                     }
                }
            }

        }
    }
}
